## tempdoc.doc
## tempdoc.doc temporary documentation for marche package
##  
############################################################################ 
## Copyleft 2015, Ernest Yeung <ernestyalumni@gmail.com>                            
##                                                            
## 20150805
##                                                                               
## This program, along with all its code, is free software; you can redistribute 
## it and/or modify it under the terms of the GNU General Public License as 
## published by the Free Software Foundation; either version 2 of the License, or   
## (at your option) any later version.                                        
##     
## This program is distributed in the hope that it will be useful,               
## but WITHOUT ANY WARRANTY; without even the implied warranty of              
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 
## GNU General Public License for more details.                             
##                                                                          
## You can have received a copy of the GNU General Public License             
## along with this program; if not, write to the Free Software Foundation, Inc.,  
## S1 Franklin Street, Fifth Floor, Boston, MA                      
## 02110-1301, USA                                                             
##                                                                  
## Governing the ethics of using this program, I default to the Caltech Honor Code: 
## ``No member of the Caltech community shall take unfair advantage of        
## any other member of the Caltech community.''                               
##                                                         
## Donate, and support my other scientific and engineering endeavors at 
## ernestyalumni.tilt.com                                                      
##                          
## Facebook     : ernestyalumni                                                   
## linkedin     : ernestyalumni                                                    
## Tilt/Open    : ernestyalumni                                                    
## twitter      : ernestyalumni                                                   
## youtube      : ernestyalumni                                                   
## wordpress    : ernestyalumni                                                    
##                                                                                  
############################################################################ 

Quick Start:
Build:
python -i firms_by_NASDAQ.py
python -i YHOOF_toSQL.py

Then, after every trading day, update the table of Historical Prices by running the following:
python -i apres_YHOOFhp.py

Then use the following SQL table-mapper classes to make SQLAlchemy session queries:
security
Symbole
YHOOF_HISTP_datapt as YfHP_pt

with 
security - yields, for each security, firm, stock, or company listed in the NYSE, AMEX, or NASDAQ the IPOyear, Last Sale, Market it belongs to, Market Capitalization, its (long) name, Sector, Symbol, industry it belongs
Symbole - a SQLalchemy class mapper to table “symbole_table” which is a table of only ticker symbols (it’s fast to query this table if you only want ticker symbols)
YHOOF_HISTP_datapt as YfHP_pt - all historical prices for all possible securities, firms, stocks, or companies listed in the NYSE, AMEX, or NASDAQ


Start here with
firms_by_NASDAQ.py

If you’re building the SQL database of all the present firms (i.e. symbols, tickers, stocks) that are listed by the NASDAQ website for NASDAQ, AMEX, and NYSE, then do this:

-Go edit the Python script firms_by_NASDAQ.py and replace the string “iamauser” with the username you want to use for your SQL database.
-Be sure to configure the SQLAlchemy engine with your choice of SQL database.  For instance, I use postgresql, so I used “postgresql://“ in create_engine.  Also, it’s located in a localhost for the postgreSQL database named ‘marche’, i.e. first, I created, with createdb the PostgreSQL database marche.  Then, I have to “call it” with the SQLAlchemy engine.  

python firms_by_NASDAQ.py

in its directory.  


apres_firms_by_NASDAQ.py

The available SQLalchemy classes that map to tables are the following:
securityNASDAQ
securityAMEX
securityNYSE
security
Symbole

securityNASDAQ - information on a security (i.e. firm, stock, company) listed solely on NASDAQ
securityAMEX - information on a security (i.e. firm, stock, company) listed solely on AMEX
securityNYSE - information on a security (i.e. firm, stock, company) listed solely on NYSE
security - information on a security (i.e. firm, stock, company) listed in all 3, NASDAQ, AMEX, NYSE, that is sourced from the NASDAQ website
Symbole - this class maps to a table that only contains unique ticker symbols


YHOOF_toSQL.py

Recall that 

session.query(Symbole).all()

gets all the (ticker) symbols, with no duplicates, as a Python list.  

run 

python -i YHOOF_toSQL.py

and answer “yes” at the prompt to build the entire SQL database of historical prices for all available data from Yahoo! Finance for all firms (i.e. stocks, tickers, companies) in the NASDAQ, NYSE, AMEX, according to the NASDAQ website.

EY : 20150909
TIPS:
http://stackoverflow.com/questions/21439869/cant-drop-a-table-in-postgres
One needs to be careful about how case-sensitive case-insensitivity is in psql
So do something like this:
DROP TABLE "quandl_source" CASCADE;
For this to work.  

http://stackoverflow.com/questions/11668355/sqlalchemy-get-model-from-table-name-this-may-imply-appending-some-function-to

Base._decl_class_registry.values() (that will get you the “model” or the SQLalchemy class associated to each table, you get the object itself)

############################################################################ 
##### posts on wordpress.com and other places involving marche
############################################################################ 

<em>(in progress)</em>
<h2>Is the U.S. S&amp;P 500 Price-to-Earnings (PE) multiple too rich right now?</h2>
Take a look at the Price to Earnings Ratio, based upon an average of earnings over ten years, and the S&amp;P composite. Data is from the <a href="http://www.econ.yale.edu/~shiller/data/chapt26.xls">Yale S\
chool of Economics</a>, namely Robert J. Shiller's <strong>Market Volatility</strong>, Chapter 26, which is updated on his website, and can easily be accessed through the <a href="https://www.quandl.com/data/YALE/SP_PER10Y-U-S-Stock-Price-Data-Price-Earnings-Ratio-Ten-Year-Earnings">Quandl website</a>, and can be databased locally using Python scripts in the github repository <a href="https://github.com/ernestyalumni/marche">marche</a>


